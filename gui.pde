/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:934291:
  appc.background(230);
} //_CODE_:window1:934291:

public void PlanetRadius(GCustomSlider source, GEvent event) { //_CODE_:Planet_Radius:620668:
  println("Planet_Radius - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:Planet_Radius:620668:

public void a(GDropList source, GEvent event) { //_CODE_:Planet_List:332843:
  println("Planet_List - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:Planet_List:332843:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:NumPlanetsSlider:553222:
  println("NumPlanetsSlider - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:NumPlanetsSlider:553222:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 600, 600, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  planetLabel = new GLabel(window1, 6, 6, 80, 20);
  planetLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  planetLabel.setText("Planets:");
  planetLabel.setOpaque(false);
  NumPlanetLabel = new GLabel(window1, 6, 84, 108, 20);
  NumPlanetLabel.setText("Number of Planets");
  NumPlanetLabel.setOpaque(false);
  Planet_Radius = new GCustomSlider(window1, 438, 102, 120, 40, "grey_blue");
  Planet_Radius.setLimits(0.5, 0.0, 1.0);
  Planet_Radius.setNumberFormat(G4P.DECIMAL, 2);
  Planet_Radius.setOpaque(false);
  Planet_Radius.addEventHandler(this, "PlanetRadius");
  PlanetMassLabel = new GLabel(window1, 150, 84, 80, 20);
  PlanetMassLabel.setText("Mass");
  PlanetMassLabel.setOpaque(false);
  OrbitRadiusLabel = new GLabel(window1, 294, 84, 80, 20);
  OrbitRadiusLabel.setText("Orbit Radius");
  OrbitRadiusLabel.setOpaque(false);
  PlanetRadiusLabel = new GLabel(window1, 438, 84, 84, 20);
  PlanetRadiusLabel.setText("Planet Radius");
  PlanetRadiusLabel.setOpaque(false);
  Planet_List = new GDropList(window1, 6, 42, 90, 80, 3, 10);
  Planet_List.setItems(loadStrings("list_332843"), 0);
  Planet_List.addEventHandler(this, "a");
  NumPlanetsSlider = new GSlider(window1, 6, 102, 100, 40, 10.0);
  NumPlanetsSlider.setLimits(0.5, 0.0, 1.0);
  NumPlanetsSlider.setNumberFormat(G4P.DECIMAL, 2);
  NumPlanetsSlider.setOpaque(false);
  NumPlanetsSlider.addEventHandler(this, "slider1_change1");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GLabel planetLabel; 
GLabel NumPlanetLabel; 
GCustomSlider Planet_Radius; 
GLabel PlanetMassLabel; 
GLabel OrbitRadiusLabel; 
GLabel PlanetRadiusLabel; 
GDropList Planet_List; 
GSlider NumPlanetsSlider; 
